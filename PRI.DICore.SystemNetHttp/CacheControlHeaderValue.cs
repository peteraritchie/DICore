//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;


namespace PRI.DICore.SystemNetHttp
{
    
    
    /// <summary>
    /// Default implementation of <sealso cref="ICacheControlHeaderValue" />
    /// </summary>
    public sealed partial class CacheControlHeaderValue : ICacheControlHeaderValue
    {
        
        private System.Net.Http.Headers.CacheControlHeaderValue containedObject;
        
        public CacheControlHeaderValue(System.Net.Http.Headers.CacheControlHeaderValue containedObject)
        {
            if ((containedObject == null))
            {
                throw new System.ArgumentNullException("containedObject");
            }
            this.containedObject = containedObject;
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.NoCache"/>
        /// </summary>
        public bool NoCache
        {
            get
            {
                return this.containedObject.NoCache;
            }
            set
            {
                this.containedObject.NoCache = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders"/>
        /// </summary>
        public System.Collections.Generic.ICollection<string> NoCacheHeaders
        {
            get
            {
                return this.containedObject.NoCacheHeaders;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.NoStore"/>
        /// </summary>
        public bool NoStore
        {
            get
            {
                return this.containedObject.NoStore;
            }
            set
            {
                this.containedObject.NoStore = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.MaxAge"/>
        /// </summary>
        public System.Nullable<System.TimeSpan> MaxAge
        {
            get
            {
                return this.containedObject.MaxAge;
            }
            set
            {
                this.containedObject.MaxAge = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge"/>
        /// </summary>
        public System.Nullable<System.TimeSpan> SharedMaxAge
        {
            get
            {
                return this.containedObject.SharedMaxAge;
            }
            set
            {
                this.containedObject.SharedMaxAge = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.MaxStale"/>
        /// </summary>
        public bool MaxStale
        {
            get
            {
                return this.containedObject.MaxStale;
            }
            set
            {
                this.containedObject.MaxStale = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit"/>
        /// </summary>
        public System.Nullable<System.TimeSpan> MaxStaleLimit
        {
            get
            {
                return this.containedObject.MaxStaleLimit;
            }
            set
            {
                this.containedObject.MaxStaleLimit = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.MinFresh"/>
        /// </summary>
        public System.Nullable<System.TimeSpan> MinFresh
        {
            get
            {
                return this.containedObject.MinFresh;
            }
            set
            {
                this.containedObject.MinFresh = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.NoTransform"/>
        /// </summary>
        public bool NoTransform
        {
            get
            {
                return this.containedObject.NoTransform;
            }
            set
            {
                this.containedObject.NoTransform = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached"/>
        /// </summary>
        public bool OnlyIfCached
        {
            get
            {
                return this.containedObject.OnlyIfCached;
            }
            set
            {
                this.containedObject.OnlyIfCached = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.Public"/>
        /// </summary>
        public bool Public
        {
            get
            {
                return this.containedObject.Public;
            }
            set
            {
                this.containedObject.Public = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.Private"/>
        /// </summary>
        public bool Private
        {
            get
            {
                return this.containedObject.Private;
            }
            set
            {
                this.containedObject.Private = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders"/>
        /// </summary>
        public System.Collections.Generic.ICollection<string> PrivateHeaders
        {
            get
            {
                return this.containedObject.PrivateHeaders;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate"/>
        /// </summary>
        public bool MustRevalidate
        {
            get
            {
                return this.containedObject.MustRevalidate;
            }
            set
            {
                this.containedObject.MustRevalidate = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate"/>
        /// </summary>
        public bool ProxyRevalidate
        {
            get
            {
                return this.containedObject.ProxyRevalidate;
            }
            set
            {
                this.containedObject.ProxyRevalidate = value;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.Extensions"/>
        /// </summary>
        public System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue> Extensions
        {
            get
            {
                return this.containedObject.Extensions;
            }
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            return this.containedObject.ToString();
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.Equals"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            return this.containedObject.Equals(obj);
        }
        
        /// <summary>
        /// <see cref="System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            return this.containedObject.GetHashCode();
        }
    }
}
