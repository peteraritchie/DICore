//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;


namespace PRI.DICore.SystemNetHttp
{
	/// <summary>
	/// Default implementation of <sealso cref="IHttpClient" />
	/// </summary>
	public sealed partial class HttpClient : IHttpClient
	{
		private static System.Net.Http.HttpClient sharedHttpClient = new System.Net.Http.HttpClient();
		private System.Net.Http.HttpClient containedObject;
		private IDisposable containedDisposable;

		public HttpClient()
		{
			containedObject = sharedHttpClient;
		}

		public HttpClient(System.Net.Http.HttpClient containedObject)
		{
			if ((containedObject == null))
			{
				throw new System.ArgumentNullException("containedObject");
			}
			this.containedObject = containedObject;
			this.containedDisposable = containedObject;
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.DefaultRequestHeaders"/>
		/// </summary>
		public System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders
		{
			get
			{
				return this.containedObject.DefaultRequestHeaders;
			}
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.BaseAddress"/>
		/// </summary>
		public System.Uri BaseAddress
		{
			get
			{
				return this.containedObject.BaseAddress;
			}
			set
			{
				this.containedObject.BaseAddress = value;
			}
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.Timeout"/>
		/// </summary>
		public System.TimeSpan Timeout
		{
			get
			{
				return this.containedObject.Timeout;
			}
			set
			{
				this.containedObject.Timeout = value;
			}
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.MaxResponseContentBufferSize"/>
		/// </summary>
		public long MaxResponseContentBufferSize
		{
			get
			{
				return this.containedObject.MaxResponseContentBufferSize;
			}
			set
			{
				this.containedObject.MaxResponseContentBufferSize = value;
			}
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync(System.Uri requestUri, System.Threading.CancellationToken cancellationToken)
		{
			return this.containedObject.GetAsync(requestUri, cancellationToken);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.SendAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync(System.Net.Http.HttpRequestMessage request)
		{
			return this.containedObject.SendAsync(request);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetStringAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<string> GetStringAsync(string requestUri)
		{
			return this.containedObject.GetStringAsync(requestUri);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetStringAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<string> GetStringAsync(System.Uri requestUri)
		{
			return this.containedObject.GetStringAsync(requestUri);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetByteArrayAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<byte[]> GetByteArrayAsync(string requestUri)
		{
			return this.containedObject.GetByteArrayAsync(requestUri);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetByteArrayAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<byte[]> GetByteArrayAsync(System.Uri requestUri)
		{
			return this.containedObject.GetByteArrayAsync(requestUri);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetStreamAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.IO.Stream> GetStreamAsync(string requestUri)
		{
			return this.containedObject.GetStreamAsync(requestUri);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetStreamAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.IO.Stream> GetStreamAsync(System.Uri requestUri)
		{
			return this.containedObject.GetStreamAsync(requestUri);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync(string requestUri)
		{
			return this.containedObject.GetAsync(requestUri);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync(System.Uri requestUri)
		{
			return this.containedObject.GetAsync(requestUri);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync(string requestUri, System.Net.Http.HttpCompletionOption completionOption)
		{
			return this.containedObject.GetAsync(requestUri, completionOption);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync(System.Uri requestUri, System.Net.Http.HttpCompletionOption completionOption)
		{
			return this.containedObject.GetAsync(requestUri, completionOption);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync(string requestUri, System.Threading.CancellationToken cancellationToken)
		{
			return this.containedObject.GetAsync(requestUri, cancellationToken);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync(string requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken)
		{
			return this.containedObject.GetAsync(requestUri, completionOption, cancellationToken);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.GetAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync(System.Uri requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken)
		{
			return this.containedObject.GetAsync(requestUri, completionOption, cancellationToken);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.PostAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PostAsync(string requestUri, System.Net.Http.HttpContent content)
		{
			return this.containedObject.PostAsync(requestUri, content);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.PostAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PostAsync(System.Uri requestUri, System.Net.Http.HttpContent content)
		{
			return this.containedObject.PostAsync(requestUri, content);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.PostAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PostAsync(string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken)
		{
			return this.containedObject.PostAsync(requestUri, content, cancellationToken);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.PostAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PostAsync(System.Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken)
		{
			return this.containedObject.PostAsync(requestUri, content, cancellationToken);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.PutAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PutAsync(string requestUri, System.Net.Http.HttpContent content)
		{
			return this.containedObject.PutAsync(requestUri, content);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.PutAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PutAsync(System.Uri requestUri, System.Net.Http.HttpContent content)
		{
			return this.containedObject.PutAsync(requestUri, content);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.PutAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PutAsync(string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken)
		{
			return this.containedObject.PutAsync(requestUri, content, cancellationToken);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.PutAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PutAsync(System.Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken)
		{
			return this.containedObject.PutAsync(requestUri, content, cancellationToken);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.DeleteAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> DeleteAsync(string requestUri)
		{
			return this.containedObject.DeleteAsync(requestUri);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.DeleteAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> DeleteAsync(System.Uri requestUri)
		{
			return this.containedObject.DeleteAsync(requestUri);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.DeleteAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> DeleteAsync(string requestUri, System.Threading.CancellationToken cancellationToken)
		{
			return this.containedObject.DeleteAsync(requestUri, cancellationToken);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.DeleteAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> DeleteAsync(System.Uri requestUri, System.Threading.CancellationToken cancellationToken)
		{
			return this.containedObject.DeleteAsync(requestUri, cancellationToken);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.SendAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync(System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken)
		{
			return this.containedObject.SendAsync(request, cancellationToken);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.SendAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync(System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption)
		{
			return this.containedObject.SendAsync(request, completionOption);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.SendAsync"/>
		/// </summary>
		public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync(System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken)
		{
			return this.containedObject.SendAsync(request, completionOption, cancellationToken);
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.CancelPendingRequests"/>
		/// </summary>
		public void CancelPendingRequests()
		{
			this.containedObject.CancelPendingRequests();
		}

		/// <summary>
		/// <see cref="System.Net.Http.HttpClient.Dispose"/>
		/// </summary>
		public void Dispose()
		{
			if (this.containedDisposable != null)
			{
				this.containedDisposable.Dispose();
			}
		}
	}
}
